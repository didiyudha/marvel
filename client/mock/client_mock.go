// Code generated by MockGen. DO NOT EDIT.
// Source: client/client.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"
	time "time"

	client "github.com/didiyudha/marvel/client"
	gomock "github.com/golang/mock/gomock"
)

// MockMarvelClient is a mock of MarvelClient interface.
type MockMarvelClient struct {
	ctrl     *gomock.Controller
	recorder *MockMarvelClientMockRecorder
}

// MockMarvelClientMockRecorder is the mock recorder for MockMarvelClient.
type MockMarvelClientMockRecorder struct {
	mock *MockMarvelClient
}

// NewMockMarvelClient creates a new mock instance.
func NewMockMarvelClient(ctrl *gomock.Controller) *MockMarvelClient {
	mock := &MockMarvelClient{ctrl: ctrl}
	mock.recorder = &MockMarvelClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMarvelClient) EXPECT() *MockMarvelClientMockRecorder {
	return m.recorder
}

// CharacterDetail mocks base method.
func (m *MockMarvelClient) CharacterDetail(ctx context.Context, timestamps time.Time, id int) (client.CharacterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CharacterDetail", ctx, timestamps, id)
	ret0, _ := ret[0].(client.CharacterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CharacterDetail indicates an expected call of CharacterDetail.
func (mr *MockMarvelClientMockRecorder) CharacterDetail(ctx, timestamps, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CharacterDetail", reflect.TypeOf((*MockMarvelClient)(nil).CharacterDetail), ctx, timestamps, id)
}

// Characters mocks base method.
func (m *MockMarvelClient) Characters(ctx context.Context, timestamps time.Time, limit, offset int) (client.CharacterResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Characters", ctx, timestamps, limit, offset)
	ret0, _ := ret[0].(client.CharacterResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Characters indicates an expected call of Characters.
func (mr *MockMarvelClientMockRecorder) Characters(ctx, timestamps, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Characters", reflect.TypeOf((*MockMarvelClient)(nil).Characters), ctx, timestamps, limit, offset)
}
